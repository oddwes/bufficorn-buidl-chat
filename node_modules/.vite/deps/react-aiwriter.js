import {
  require_react
} from "./chunk-KXUSMUO4.js";
import {
  __commonJS
} from "./chunk-WOOG5QLI.js";

// ../node_modules/react-aiwriter/dist/useInterval.js
var require_useInterval = __commonJS({
  "../node_modules/react-aiwriter/dist/useInterval.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var react_1 = __importDefault(require_react());
    var useInterval = function(callback, delay) {
      var intervalRef = react_1.default.useRef(null);
      var savedCallback = react_1.default.useRef(callback);
      react_1.default.useEffect(function() {
        savedCallback.current = callback;
      }, [callback]);
      react_1.default.useEffect(function() {
        var tick = function() {
          return savedCallback.current();
        };
        if (typeof delay === "number") {
          intervalRef.current = window.setInterval(tick, delay);
          return function() {
            return window.clearInterval(intervalRef.current);
          };
        }
      }, [delay]);
      return intervalRef;
    };
    exports.default = useInterval;
  }
});

// ../node_modules/react-aiwriter/dist/util.js
var require_util = __commonJS({
  "../node_modules/react-aiwriter/dist/util.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getCurrentNodeOverflow = exports.getStringPosition = void 0;
    var getStringPosition = function(string, subString, index) {
      return string.split(subString, index).join(" ").length;
    };
    exports.getStringPosition = getStringPosition;
    var getCurrentNodeOverflow = function(arr, pos) {
      var acc = 0;
      var index = 0;
      for (var i = 0; i < arr.length; i++) {
        if (acc + arr[i] > pos) {
          break;
        }
        index++;
        acc = acc + arr[i];
      }
      return [index, pos - acc];
    };
    exports.getCurrentNodeOverflow = getCurrentNodeOverflow;
  }
});

// ../node_modules/react-aiwriter/dist/AIWriter.js
var require_AIWriter = __commonJS({
  "../node_modules/react-aiwriter/dist/AIWriter.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var react_1 = __importDefault(require_react());
    var useInterval_1 = __importDefault(require_useInterval());
    var util_1 = require_util();
    var AIWriter = react_1.default.memo(function(_a) {
      var children = _a.children, _b = _a.delay, delay = _b === void 0 ? 25 : _b, _c = _a.onEnd, onEnd = _c === void 0 ? function() {
      } : _c;
      var _d = react_1.default.useState(0), pos = _d[0], setPos = _d[1];
      var tokenLengths = react_1.default.useMemo(function() {
        var arr = [];
        var traverseNodesAndCountTokens = function(reactNode) {
          var _a2;
          var nodeChildren = (_a2 = reactNode === null || reactNode === void 0 ? void 0 : reactNode.props) === null || _a2 === void 0 ? void 0 : _a2.children;
          if (Array.isArray(reactNode)) {
            reactNode.forEach(function(node) {
              if (typeof node === "object") {
                traverseNodesAndCountTokens(node);
              } else if (typeof node === "string") {
                arr.push(node.split(" ").length);
              }
            });
          }
          if (nodeChildren === void 0) {
            if (typeof reactNode === "string") {
              arr.push(reactNode.split(" ").length);
            }
          }
          if (typeof nodeChildren === "object") {
            traverseNodesAndCountTokens(nodeChildren);
          }
          if (typeof nodeChildren === "string") {
            arr.push(nodeChildren.split(" ").length);
          }
          return arr;
        };
        return traverseNodesAndCountTokens(children);
      }, [children]);
      var totalTokens = react_1.default.useMemo(function() {
        return tokenLengths.reduce(function(acc, curr) {
          return acc + curr;
        }, 0);
      }, [tokenLengths]);
      var nodex = react_1.default.useMemo(function() {
        var tmpCurrentLoopTokenPos = 0;
        var tmpCurrentLoopNodePos = 0;
        var traverseNodesAndInjectAIWriter = function(reactNode) {
          var _a2;
          if (tmpCurrentLoopTokenPos > pos) {
            return null;
          }
          var nodeChildren = (_a2 = reactNode === null || reactNode === void 0 ? void 0 : reactNode.props) === null || _a2 === void 0 ? void 0 : _a2.children;
          if (Array.isArray(reactNode)) {
            var joinedNodes_1 = [];
            reactNode.forEach(function(node) {
              if (typeof node === "object") {
                joinedNodes_1.push(traverseNodesAndInjectAIWriter(node));
              } else if (typeof node === "string") {
                tmpCurrentLoopTokenPos += node.split(" ").length;
                tmpCurrentLoopNodePos++;
                var _a3 = (0, util_1.getCurrentNodeOverflow)(tokenLengths, pos), nodeIndex2 = _a3[0], currentNodePos2 = _a3[1];
                if (nodeIndex2 < tmpCurrentLoopNodePos) {
                  joinedNodes_1.push(node.slice(0, (0, util_1.getStringPosition)(node, " ", currentNodePos2)));
                }
                joinedNodes_1.push(node);
              }
            });
            return joinedNodes_1;
          }
          if (nodeChildren === void 0) {
            if (typeof reactNode === "string") {
              tmpCurrentLoopTokenPos += reactNode.split(" ").length;
              tmpCurrentLoopNodePos++;
              var _b2 = (0, util_1.getCurrentNodeOverflow)(tokenLengths, pos), nodeIndex = _b2[0], currentNodePos = _b2[1];
              if (nodeIndex < tmpCurrentLoopNodePos) {
                return reactNode.slice(0, (0, util_1.getStringPosition)(reactNode, " ", currentNodePos));
              }
              return reactNode;
            }
          }
          if (typeof nodeChildren === "object") {
            return react_1.default.createElement(reactNode.type, reactNode === null || reactNode === void 0 ? void 0 : reactNode.props, traverseNodesAndInjectAIWriter(nodeChildren));
          }
          if (typeof nodeChildren === "string") {
            tmpCurrentLoopTokenPos += nodeChildren.split(" ").length;
            tmpCurrentLoopNodePos++;
            var _c2 = (0, util_1.getCurrentNodeOverflow)(tokenLengths, pos), nodeIndex = _c2[0], currentNodePos = _c2[1];
            if (nodeIndex < tmpCurrentLoopNodePos) {
              return react_1.default.createElement(reactNode.type, reactNode === null || reactNode === void 0 ? void 0 : reactNode.props, nodeChildren.slice(0, (0, util_1.getStringPosition)(nodeChildren, " ", currentNodePos)));
            }
            return reactNode;
          }
        };
        return traverseNodesAndInjectAIWriter(children);
      }, [children, pos, tokenLengths]);
      (0, useInterval_1.default)(function() {
        setPos(function(prevPos) {
          if (prevPos + 1 >= totalTokens) {
            onEnd();
          }
          return prevPos + 1;
        });
      }, totalTokens > pos ? delay : null);
      react_1.default.useEffect(function() {
        console.log("hmmm");
        setPos(0);
      }, [children]);
      return nodex;
    });
    AIWriter.displayName = "AIWriter";
    exports.default = AIWriter;
  }
});

// ../node_modules/react-aiwriter/dist/index.js
var require_dist = __commonJS({
  "../node_modules/react-aiwriter/dist/index.js"(exports) {
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var AIWriter_1 = __importDefault(require_AIWriter());
    exports.default = AIWriter_1.default;
  }
});
export default require_dist();
//# sourceMappingURL=react-aiwriter.js.map
